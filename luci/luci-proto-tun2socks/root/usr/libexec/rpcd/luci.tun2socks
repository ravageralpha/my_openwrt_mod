#!/usr/bin/env lua

local json = require "luci.jsonc"
local fs   = require "nixio.fs"

local function readfile(path)
	local s = fs.readfile(path)
	return s and (s:gsub("^%s+", ""):gsub("%s+$", ""))
end

local function writefile(path, data)
	local n = fs.writefile(path, data)
	return (n == #data)
end

local function parseInput()
	local parse = json.new()
	local done, err

	while true do
		local chunk = io.read(4096)
		if not chunk then
			break
		elseif not done and not err then
			done, err = parse:parse(chunk)
		end
	end

	if not done then
		print(json.stringify({ error = err or "Incomplete input" }))
		os.exit(1)
	end

	return parse:get()
end

if arg[1] == "list" then
	print(json.stringify({
		getScript = {
			interface = "interface"
		},
		setScript = {
			interface = "interface",
			ifup = "Post Connection Script",
			ifdown = "Post Disconnection Script",
		}
	}))
elseif arg[1] == "call" then
	local args = parseInput()

	if not args.interface or
	   type(args.interface) ~= "string" or
	   not args.interface:match("^[a-zA-Z0-9_]+$")
	then
		print(json.stringify({ error = "Invalid interface name" }))
		os.exit(1)
	end

	if arg[2] == "getScript" then
		print(json.stringify({
			ifup = readfile("/etc/tun2socks/client_up.sh"),
			ifdown = readfile("/etc/tun2socks/client_down.sh")
		}))
	elseif arg[2] == "setScript" then
		if args.ifup then
			writefile("/etc/tun2socks/client_up.sh")
		end
		if args.ifdown then
			writefile("/etc/tun2socks/client_down.sh")
		end
		print(json.stringify({ result = true }))
	end
end
